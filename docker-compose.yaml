version: "3.8"

networks:
  it-mo:

services:
  auth_database:
    image: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    networks:
      - it-mo

  notification_database:
    image: postgres
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    networks:
      - it-mo

  kafka:
    image: bitnami/kafka:3.7.0
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    networks:
      - it-mo

  auth-service:
    build:
      context: .
      dockerfile: ./Dockerfile.auth-service
    ports:
      - "8080:8080"
    depends_on:
      - auth_database
      - kafka
    networks:
      - it-mo

  not_service:
    build:
      context: .
      dockerfile: ./Dockerfile.not-service
    ports:
      - "8081:8081"
    depends_on:
      - notification_database
      - kafka
    networks:
      - it-mo

  worker:
    build:
      context: .
      dockerfile: ./Dockerfile.worker
    ports:
      - "8082:8082"
    depends_on:
      - kafka
    networks:
      - it-mo
